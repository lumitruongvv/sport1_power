C51 COMPILER V9.60.0.0   UART                                                              01/07/2021 20:27:44 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Driver\uart.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common;..\Driver;..M
                    -id\Irf) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Listings\uart.lst) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          /*
   2           * Copyright (c) 2021
   3           * Team, JSC.
   4           * All Rights Reserved
   5           *
   6           *
   7           * Description:
   8           *
   9           * Author: Truongvv
  10           *
  11           * Last Changed By:  $Author: Truongvv $
  12           * Revision:         $Revision: 1.0 $
  13           * Last Changed:     $Date: x/x/xxxx $
  14           */
  15          #include "N76E003.h"
  16          #include "SFR_Macro.h"
  17          #include "Function_Define.h"
  18          #include "uart.h"
  19          
  20          type_UartCallBackFnc    p_uartCallBack = NULL;
  21          
  22          /**
  23           * @func   UART_Init
  24           * @brief  None
  25           * @param  
  26           * @retval None
  27           */
  28          void UART_Init (u32 baudRate) //use timer3 as Baudrate generator
  29          {
  30   1          P06_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  31   1          P07_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit 
  32   1      
  33   1          #ifdef FOSC_160000
  34   1              RH3    = HIBYTE(65536 - (1000000/baudRate)-1);      /*16 MHz */
  35   1              RL3    = LOBYTE(65536 - (1000000/baudRate)-1);      /*16 MHz */
  36   1          #endif
  37   1          #ifdef FOSC_166000
                      RH3    = HIBYTE(65536 - (1037500/baudRate));        /*16.6 MHz */
                      RL3    = LOBYTE(65536 - (1037500/baudRate));        /*16.6 MHz */
                  #endif
  41   1      
  42   1          SCON = 0x70;     //UART0 Mode1
  43   1          set_SMOD;        //UART0 Double Rate Enable
  44   1          T3CON &= 0xF8;   //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
  45   1          set_BRCK;        //UART0 baud rate clock source = Timer3
  46   1          set_TR3;         //Trigger Timer3
  47   1          set_ES;           //enable UART interrupt
  48   1          set_EA;
  49   1      }
  50          
  51          
  52          /**
  53           * @func   UART_SendByte
  54           * @brief  None
C51 COMPILER V9.60.0.0   UART                                                              01/07/2021 20:27:44 PAGE 2   

  55           * @param  
  56           * @retval None
  57           */
  58          void UART_SendByte (u8 byte)
  59          {
  60   1          TI = 0;
  61   1          SBUF = byte;
  62   1          while(TI==0);
  63   1      }
  64          
  65          /**
  66           * @func   UART_SendData
  67           * @brief  None
  68           * @param  
  69           * @retval None
  70           */
  71          void UART_SendData (u8* buff, u8 length)
  72          {
  73   1          uint8_t i;
  74   1        for(i = 0; i < length; i++)
  75   1          {
  76   2              UART_SendByte (buff[i]);
  77   2          }
  78   1      }
  79          
  80          /**
  81           * @func   UART_RevData
  82           * @brief  None
  83           * @param  
  84           * @retval None
  85           */
  86          u8 UART_RevData (void)
  87          {
  88   1        u8 dataRx;
  89   1        while (RI==0);
  90   1        dataRx = SBUF;
  91   1        return dataRx;
  92   1      }
  93          
  94          /**
  95           * @func   MODIFY_Hirc166
  96           * @brief  None
  97           * @param  
  98           * @retval None
  99           */
 100          void MODIFY_Hirc166(void)
 101          {
 102   1          UINT8 xdata hircmap0,hircmap1;
 103   1          UINT16 xdata trimvalue16bit;
 104   1          // Check if power on reset, modify HIRC 
 105   1          if ((PCON&SET_BIT4)==SET_BIT4)        
 106   1          {
 107   2              hircmap0 = RCTRIM0;
 108   2              hircmap1 = RCTRIM1;
 109   2              trimvalue16bit = ((hircmap0<<1)+(hircmap1&0x01));
 110   2              trimvalue16bit = trimvalue16bit - 15;
 111   2              hircmap1 = trimvalue16bit&0x01;
 112   2              hircmap0 = trimvalue16bit>>1;
 113   2              TA=0XAA;
 114   2              TA=0X55;
 115   2              RCTRIM0 = hircmap0;
 116   2              TA=0XAA;
C51 COMPILER V9.60.0.0   UART                                                              01/07/2021 20:27:44 PAGE 3   

 117   2              TA=0X55;
 118   2              RCTRIM1 = hircmap1;
 119   2              // Clear power on flag 
 120   2              PCON &= CLR_BIT4;
 121   2          }
 122   1      }
 123          
 124          /**
 125           * @func   UART_CallBackInit
 126           * @brief  None
 127           * @param  
 128           * @retval None
 129           */
 130          void UART_CallBackInit(type_UartCallBackFnc uartCallBackFnc)
 131          {
 132   1          p_uartCallBack = uartCallBackFnc;
 133   1      }
 134          
 135          /**
 136           * @func   SerialPort0_ISR
 137           * @brief  None
 138           * @param  
 139           * @retval None
 140           */
 141          void SerialPort0_ISR(void) interrupt 4
 142          {
 143   1          if(RI == SET)
 144   1          {
 145   2              clr_RI;
 146   2              if(p_uartCallBack != NULL)
 147   2              {
 148   3                  p_uartCallBack();
 149   3              }
 150   2          }
 151   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    334    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
